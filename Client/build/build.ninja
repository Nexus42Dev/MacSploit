# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.25

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: Client
# Configurations: Release
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Release
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /Users/milo/Documents/ProjectAbyssMac/Client/build/
# =============================================================================
# Object build statements for EXECUTABLE target Client


#############################################
# Order-only phony target for Client

build cmake_object_order_depends_target_Client: phony || CMakeFiles/Client.dir

build CMakeFiles/Client.dir/exploit.cpp.o: CXX_COMPILER__Client_Release /Users/milo/Documents/ProjectAbyssMac/Client/exploit.cpp || cmake_object_order_depends_target_Client
  DEP_FILE = CMakeFiles/Client.dir/exploit.cpp.o.d
  FLAGS = -stdlib=libc++ -std=c++20 -lz -framework Security -framework Foundation -dynamiclib -Qunused-arguments -lcurl -O3 -DNDEBUG -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk -mmacosx-version-min=11.0 -std=gnu++17
  INCLUDES = -I/Users/milo/Documents/ProjectAbyssMac/Client/. -I/Users/milo/Documents/ProjectAbyssMac/Client/ixwebsocket -I/Users/milo/Documents/ProjectAbyssMac/Client/openssl -I/Users/milo/Documents/ProjectAbyssMac/Client/Luau -I/Users/milo/Documents/ProjectAbyssMac/Client/imgui -isystem /Users/milo/Documents/ProjectAbyssMac/Client/metal-cpp
  OBJECT_DIR = CMakeFiles/Client.dir
  OBJECT_FILE_DIR = CMakeFiles/Client.dir


# =============================================================================
# Link build statements for EXECUTABLE target Client


#############################################
# Link the executable exploit.dylib

build exploit.dylib: CXX_EXECUTABLE_LINKER__Client_Release CMakeFiles/Client.dir/exploit.cpp.o | /Applications/Roblox.app/Contents/MacOS/libdiscord-rpc.dylib /Users/milo/Documents/ProjectAbyssMac/Client/ixwebsocket/libixwebsocket.a /Users/milo/Documents/ProjectAbyssMac/Client/LuauLibraries/libLuau.Ast.a /Users/milo/Documents/ProjectAbyssMac/Client/LuauLibraries/libLuau.Compiler.a /Users/milo/Documents/ProjectAbyssMac/Client/openssl/libcrypto.a
  FLAGS = -stdlib=libc++ -std=c++20 -lz -framework Security -framework Foundation -dynamiclib -Qunused-arguments -lcurl -O3 -DNDEBUG -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk -mmacosx-version-min=11.0
  LINK_LIBRARIES = -Wl,-rpath,/Applications/Roblox.app/Contents/MacOS  /Applications/Roblox.app/Contents/MacOS/libdiscord-rpc.dylib  /Users/milo/Documents/ProjectAbyssMac/Client/ixwebsocket/libixwebsocket.a  /Users/milo/Documents/ProjectAbyssMac/Client/LuauLibraries/libLuau.Ast.a  /Users/milo/Documents/ProjectAbyssMac/Client/LuauLibraries/libLuau.Compiler.a  /Users/milo/Documents/ProjectAbyssMac/Client/openssl/libcrypto.a  -Xlinker -framework -Xlinker Foundation  -Xlinker -framework -Xlinker QuartzCore  -Xlinker -framework -Xlinker Metal  -Xlinker -framework -Xlinker CoreGraphics  -Xlinker -framework -Xlinker MetalKit  -Xlinker -framework -Xlinker AppKit
  OBJECT_DIR = CMakeFiles/Client.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = exploit.dylib
  TARGET_PDB = exploit.dylib.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/milo/Documents/ProjectAbyssMac/Client/build && /Applications/CMake.app/Contents/bin/ccmake -S/Users/milo/Documents/ProjectAbyssMac/Client -B/Users/milo/Documents/ProjectAbyssMac/Client/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/milo/Documents/ProjectAbyssMac/Client/build && /Applications/CMake.app/Contents/bin/cmake --regenerate-during-build -S/Users/milo/Documents/ProjectAbyssMac/Client -B/Users/milo/Documents/ProjectAbyssMac/Client/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build Client: phony exploit.dylib

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /Users/milo/Documents/ProjectAbyssMac/Client/build

build all: phony exploit.dylib

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeCInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeCXXInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeCommonLanguageInclude.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeGenericSystem.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeInitializeConfigs.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeLanguageInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeSystemSpecificInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/AppleClang-C.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/AppleClang-CXX.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/Clang.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/GNU.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-Clang-C.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-Clang.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Darwin-Initialize.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Darwin.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/UnixPaths.cmake /Users/milo/Documents/ProjectAbyssMac/Client/CMakeLists.txt CMakeCache.txt CMakeFiles/3.25.1/CMakeCCompiler.cmake CMakeFiles/3.25.1/CMakeCXXCompiler.cmake CMakeFiles/3.25.1/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeCInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeCXXInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeCommonLanguageInclude.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeGenericSystem.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeInitializeConfigs.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeLanguageInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeSystemSpecificInformation.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/AppleClang-C.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/AppleClang-CXX.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/Clang.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Compiler/GNU.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-Clang-C.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Apple-Clang.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Darwin-Initialize.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/Darwin.cmake /Applications/CMake.app/Contents/share/cmake-3.25/Modules/Platform/UnixPaths.cmake /Users/milo/Documents/ProjectAbyssMac/Client/CMakeLists.txt CMakeCache.txt CMakeFiles/3.25.1/CMakeCCompiler.cmake CMakeFiles/3.25.1/CMakeCXXCompiler.cmake CMakeFiles/3.25.1/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
